<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | Rich Code]]></title>
  <link href="http://rjmccluskey.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://rjmccluskey.github.io/"/>
  <updated>2015-02-12T09:58:13-08:00</updated>
  <id>http://rjmccluskey.github.io/</id>
  <author>
    <name><![CDATA[Rich McCluskey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What the Heck Are Git and GitHub?]]></title>
    <link href="http://rjmccluskey.github.io/blog/2014/09/20/what-the-heck-are-git-and-github/"/>
    <updated>2014-09-20T17:39:27-07:00</updated>
    <id>http://rjmccluskey.github.io/blog/2014/09/20/what-the-heck-are-git-and-github</id>
    <content type="html"><![CDATA[<p>I&#8217;m just finishing my very first week of Phase 0 at Dev Bootcamp and it has far exceeded my expectations! I am amazed at how much I have already learned in less than one week and I am stoked to see what&#8217;s next! The vibe here is nothing but motivational and supportive, which is pretty astonishing considering no one has even met in person yet. And as part of the educational experience I am going to share some stuff I&#8217;ve been learning!</p>


<!-- more -->


<p>I want to talk to you about Git and GitHub. Most of this first week&#8217;s material has been on that subject and for good reason. So what is Git? What is GitHub? Well, to really answer those questions I need to tell you about my little friend version control. Version control remembers all the changes you&#8217;ve made to certain files on your computer and when you&#8217;ve made them. And it even lets you collaborate with others on those same files because it has the ability to merge them together! Imagine the following scenario. You are a scientist researching the effectiveness of different coffees from all over the world (ahh, science!). But you don&#8217;t have the time or the funds to do all the research yourself, so you recruit a team of scientists from different countries to help you with your work. One way to do this would be to have everyone send you their findings separately, and then figure out how to put it all together into a research paper yourself. Or, we can use our buddy version control and have everyone work on the same research paper at the same time! Whenever anyone adds some new data or a new finding, this would be logged and then you can pick and choose what to merge into your master file! And if you change something and decide an earlier version of your paper was better you can easily revert back. Isn&#8217;t that great?!</p>




<p>So how do we actually use version control? Well, that&#8217;s exactly what Git is for! Git is a version control program that runs locally on your computer. Unlike most software, it doesn&#8217;t have a graphical user interface (GUI) and you use your command line to control it. If you are unfamiliar with your command line and how to use it, check out these resources: <a href="http://lifehacker.com/5633909/">A Command Line Primer for Beginners</a>, <a href="http://cli.learncodethehardway.org/book/">The Command Line Crash Course</a>. You assign projects into repositories (repos). A repo is simply a file structure that Git knows to keep track of. Whenever you make a significant change to your repo, you save this change by making a &#8220;commit.&#8221; All your commits are logged for the entirety of the project and you can revert your repo back to any of them at any time! You can even make different versions of your repo with &#8220;branches.&#8221; By default, your repo starts out with the &#8220;master branch&#8221; and other branches can be &#8220;merged&#8221; into your master. This is all great when you are working by yourself, but wouldn&#8217;t it be even more awesome if there was a copy of your repo that lived on the Internet for you and other people to collaborate on?!</p>




<p>You&#8217;re in luck! <a href="http://www.github.com">GitHub</a> is like Facebook for Git users. It is literally an online &#8220;hub&#8221; for you to store your repos and see other people&#8217;s projects as well. And Git syncs with it! You can &#8220;push&#8221; your commits to GitHub, and &#8220;pull&#8221; any commits from GitHub that aren&#8217;t on your computer yet. If you like someone&#8217;s public project and want to create your own from theirs, you can &#8220;fork&#8221; it into your own separate repo and then &#8220;clone&#8221; that repo to your computer. If they update their repo and you want to get their changes, you do this by &#8220;fetching.&#8221; Now for the really cool part. You can even try to convince others to use your changes from your forked repo by sending them a &#8220;pull request.&#8221; That&#8217;s the real beauty of open source software!</p>




<p>So hopefully you now have a better idea what Git and GitHub are and the differences between them. There&#8217;s still a ton more to learn before you can use them but understanding their concepts is an important start. Thanks for reading! :)</p>

]]></content>
  </entry>
  
</feed>
